'studyyear',
"Signal",
"Location",
"Paired",
"Subgroup Analysis",
"Restaurant",
"Blue Collar",
"Office Focus",
"Degree Level",
#"Document Types",
"Start date",
"End date",
"Total applications",
"Method of resume submission",
"Group 1 Treatment", "Group 1 Control", "Group 1 Condition",
"Group 2 Treatment", "Group 2 Control", "Group 2 Condition",
"Group 3 Treatment", "Group 3 Control", "Group 3 Condition",
"Group 4 Treatment", "Group 4 Control", "Group 4 Condition",
"Group 5 Treatment", "Group 5 Control", "Group 5 Condition",
"Group 6 Treatment", "Group 6 Control", "Group 6 Condition",
"Group 1 # resumes (treat)", "Group 1 % callbacks (treat)",
"Group 1 # resumes (control)", "Group 1 % callbacks (control)",
"Group 2 # resumes (treat)", "Group 2 % callbacks (treat)",
"Group 2 # resumes (control)", "Group 2 % callbacks (control)",
"Group 3 # resumes (treat)", "Group 3 % callbacks (treat)",
"Group 3 # resumes (control)", "Group 3 % callbacks (control)",
"Group 4 # resumes (treat)", "Group 4 % callbacks (treat)",
"Group 4 # resumes (control)", "Group 4 % callbacks (control)",
"Group 5 # resumes (treat)", "Group 5 % callbacks (treat)",
"Group 5 # resumes (control)", "Group 5 % callbacks (control)",
"Group 6 # resumes (treat)", "Group 6 % callbacks (treat)",
"Group 6 # resumes (control)", "Group 6 % callbacks (control)")
covidence[covidence$studyname == "Figinski",]$studyyear <- "2019" # Figinski is 2019
covidence <- covidence %>% left_join(doi, join_by(closest(studyname <= Author), studyyear == "Publication Year")) %>% rename(doi = DOI)
covidence[covidence$studyname == "Lahey",]$doi = "10.3368/jhr.43.1.30" # Lahey should be 10.3368/jhr.43.1.30
covidence[covidence$studyname == "Flake",]$doi = "Flake" # Mark Flake as doi = Flake
covidence_unique <- covidence %>%
filter(`Lippens et al.?` == "No") %>%
pivot_longer(cols = ends_with(")"),names_prefix = "Group ", names_pattern = "(\\d+)(.*)", names_to = c("group","name"), values_drop_na = FALSE) %>%
pivot_longer(cols = starts_with("Group "), names_prefix = "Group ", names_pattern = "(\\d+)(.*)", names_to = c("group2","name2"), values_to = "value2", values_drop_na = TRUE) %>%
filter(group == group2) %>%
select(!"group2") %>%
pivot_wider(names_from = "name", values_from = "value") %>%
pivot_wider(names_from = "name2", values_from = "value2")
covidence <- covidence %>%
filter(`Lippens et al.?` == "Yes") %>%
select(!c( "Group 1 Treatment":"Group 6 % callbacks (control)")) %>%
bind_rows(covidence_unique) %>%
mutate(Paired = case_when(grepl("Yes", Paired) ~ 1, grepl("No",  Paired) ~ 0),
`Subgroup Analysis` = case_when(grepl("Yes", `Subgroup Analysis`) ~ 1, grepl("No",  `Subgroup Analysis`) ~ 0),
Restaurant = case_when(grepl("Yes", Restaurant) ~ 1, grepl("No",  Restaurant) ~ 0),
`Blue Collar` = case_when(grepl("Yes", `Blue Collar`) ~ 1, grepl("No",  `Blue Collar`) ~ 0),
`Office Focus` = case_when(grepl("Yes", `Office Focus`) ~ 1, grepl("No",  `Office Focus`) ~ 0),
high_school = case_when(grepl("High school", `Degree Level`) ~ 1, .default = 0),
some_college = case_when(grepl("Some college", `Degree Level`) ~ 1, .default = 0),
college = case_when(grepl("College degree", `Degree Level`) ~ 1, .default = 0),
graduate_degree = case_when(grepl("Graduate degree", `Degree Level`) ~ 1, .default = 0)) %>%
select(!c("Degree Level", "group")) %>%
rename(tested_maj = ` # resumes (control)`,
tested_min = ` # resumes (treat)`,
proportion_maj = ` % callbacks (control)`,
proportion_min = ` % callbacks (treat)`) %>%
mutate(tested_maj = as.numeric(tested_maj),
tested_min = as.numeric(tested_min))
rbind(covidence %>%
select(Author,` Treatment`,` Condition`, proportion_min,tested_min) %>%
rename(study=Author) %>%
rename(level=` Treatment`) %>%
rename(condition=` Condition`) %>%
rename(callback=proportion_min) %>%
rename(n=tested_min) ,
covidence %>%
select(Author,` Control`,` Condition`, proportion_maj,tested_maj) %>%
rename(study=Author) %>%
rename(level=` Control`) %>%
rename(condition=` Condition`) %>%
rename(callback=proportion_maj) %>%
rename(n=tested_maj)) %>%
mutate(study=tolower(str_extract(study, pattern = "^[^,]+"))) %>%
mutate(level=tolower(level)) %>%
mutate(level = ifelse(study == "bailey" & level == "straight men", trimws(gsub("men", "", level)), level)) %>%
mutate(level = ifelse(study == "bailey" & level == "straight women", trimws(gsub("women", "", level)), level)) %>%
mutate(level=trimws(gsub("philly", "", level))) %>%
mutate(level=trimws(gsub("chicago", "", level))) %>%
mutate(level=trimws(gsub("dallas", "", level))) %>%
mutate(level = str_replace(level, "illness-explained gap", "illness")) %>%
mutate(level = str_replace(level, "newly unemployed", "shortgap")) %>%
mutate(level = str_replace(level, "unexplained gap", "longgap")) %>%
mutate(level = str_replace(level, "lgbtq club member", "gay")) %>%
mutate(level = str_replace(level, "other club", "straight")) %>%
mutate(level = str_replace(level, "childless women", "nonparent")) %>%
mutate(level = str_replace(level, "mother", "parent")) %>%
mutate(category = if_else(study == "jolson", "religion",
if_else(study == "gaulke", "education",
if_else(study == "kreisberg", "union",
if_else(study == "ishizuka", "parenthood",
if_else(study == "beauregard" | study == "bertrand" | study == "deming" | study == "pedulla" | study == "gorzig" , "race and national origin",
if_else(study == "kroft" | study == "namingit" , "unemployed",
if_else(study == "yemane" & level == "black" | level == "white" , "race",
if_else(study == "yemane" & level == "men" | level == "women" , "gender",
if_else(study == "yemane" & level == "mother" | level == "father" , "parent",
if_else(study == "tilcsik" | study == "mishel"| study == "bailey" | study == "kline", "sexual orientation",NA))))))))))) %>%
group_by(study, category, level) %>%
mutate(n=sum(n)) %>%
mutate(callback=mean(callback)) %>%
select(!condition) %>%
unique() %>%
filter(!is.na(callback))%>%
mutate(level = ifelse(study == "ishizuka" & level == "parents", "parent", level))->covidence
rm(covidence_unique,doi)
rm(list=ls())
library(tidyverse)
library(haven)
library(readxl)
script_path <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(script_path)
df_bertrand <- read_dta("bertrand2004.dta")
df_bertrand %>%
rename(name = firstname,
gender = sex,
race = race_str) %>%
select(name, call,
race, gender) %>%
group_by(name, race, gender) %>%
summarise(callback = mean(call, na.rm = TRUE),
callback_n = sum(call, na.rm = TRUE),
n = n()) %>%
drop_na() %>%
mutate(gender = case_when(gender == "m" ~ "Male",
gender == "f" ~ "Female"),
race = case_when(race == "b" ~ "Black",
race == "w" ~ "White")) %>%
mutate(study = "Bertrand") -> df_bertrand
View(df_bertrand)
df_bertrand <- read_dta("bertrand2004.dta")
View(df_bertrand)
rm(list=ls())
library(tidyverse)
library(ggpubr)
library(ggh4x)
library(ggExtra)
library(gghighlight)
library(gt)
library(car)
library(meta)
library(metafor)
library(dmetar)
library(broom)
library(ragg)
info <- sessionInfo()
packages <- info$otherPkgs
df <- data.frame(Package = names(packages), Version = sapply(packages, `[[`, 'Version'), stringsAsFactors = FALSE)
write.table(df, file = "../requirements.txt", sep = "==", row.names = FALSE, col.names = FALSE, quote = FALSE)
View(df)
read.csv("../0_data/ratings/categories/categories.csv") %>%
group_by(study) %>%
mutate(warm = replace_na(warm, mean(warm, na.rm = TRUE))) %>%
mutate(competence = replace_na(competence, mean(competence, na.rm = TRUE))) ->wc
cb<- read.csv("../0_data/extracted_data/df_all.csv",check.names = FALSE)
wc %>%
group_by(study, category, level) %>%
summarise(warm=mean(warm, na.rm=TRUE), competence=mean(competence, na.rm=TRUE), .groups="drop") %>%
mutate(category = ifelse(category == "wright", "wright", category)) %>%
left_join(cb,
by=c("study", "category", "level"))->df_wc
wc %>%
select(study, category,level, ResponseId) %>%
group_by(study, category,level)  %>%
summarise(n=n(), .groups = "drop") %>%
ungroup() %>%
summarize(avg_raters = mean(n))->n_raters
View(df)
View(df_wc)
library(stats)
# fit isotonic regression model
fit <- isoreg(df_wc$callback, df_wc$warm)
print(summary(fit))
# plot isotonic regression curve
plot(fit, xlab = "Warmth + Competence", ylab = "Callback")
# print the fitted callback rates
print(fit$yf)
# plot the fitted curve
plot(df$warmth_competence, df$callback, xlab = "Warmth + Competence", ylab = "Callback")
# plot the fitted curve
plot(df$warmth, df$callback, xlab = "Warmth + Competence", ylab = "Callback")
# plot the fitted curve
plot(df$warmth, df$callback, xlab = "Warmth + Competence", ylab = "Callback")
# plot the fitted curve
plot(df_wc$warmth, df_wc$callback, xlab = "Warmth + Competence", ylab = "Callback")
# plot the fitted curve
plot(df_wc$warm, df_wc$callback, xlab = "Warmth + Competence", ylab = "Callback")
lines(fit$x, fit$yf, col = "red")
plot(df_wc$warm, df_wc$callback, xlab = "Warmth + Competence", ylab = "Callback")
lines(fit$x, fit$yf, col = "red")
# plot the fitted curve
plot(df_wc$warm, df_wc$callback, xlab = "Warmth + Competence", ylab = "Callback")
lines(fit$x, fit$yf, col = "red")
plot(fit, xlab = "Warmth + Competence", ylab = "Callback")
plot(fit$x, fit$yf, col = "red")
plot(df_wc$warm, df_wc$callback, xlab = "Warmth + Competence", ylab = "Callback")
points(fit$x, fit$yf, col = "red")
fit <- isoreg(df_wc$callback, df_wc$warm)
print(summary(fit))
plot(fit, xlab = "Warmth + Competence", ylab = "Callback")
print(fit$yf)
# fit isotonic regression model for warmth
fit_warmth <- isoreg(df_wc$callback, df_wc$warm)
# fit isotonic regression model for competence
fit_competence <- isoreg(df_wc$callback, df_wc$competence)
# plot the fitted curves
par(mfrow = c(2, 1)) # create a 2x1 subplot layout
# plot warmth
plot(df$warmth, df$callback, xlab = "Warmth", ylab = "Callback")
# plot warmth
plot(df_wc$warm, df_wc$callback, xlab = "Warmth", ylab = "Callback")
lines(fit_warmth$x, fit_warmth$yf, col = "red")
# plot competence
plot(df$competence, df$callback, xlab = "Competence", ylab = "Callback")
lines(fit_competence$x, fit_competence$yf, col = "blue")
# plot competence
plot(df_wc$competence, df$callback, xlab = "Competence", ylab = "Callback")
lines(fit_competence$x, fit_competence$yf, col = "blue")
# plot the fitted curves
par(mfrow = c(2, 1)) # create a 2x1 subplot layout
# plot warmth
plot(df_wc$warm, df_wc$callback, xlab = "Warmth", ylab = "Callback")
lines(fit_warmth$x, fit_warmth$yf, col = "red")
# plot competence
plot(df_wc$competence, df$callback, xlab = "Competence", ylab = "Callback")
lines(fit_competence$x, fit_competence$yf, col = "blue")
print(fit$yf)
print(fit$yf)
plot(fit, xlab = "Warmth + Competence", ylab = "Callback")
plot(fit_warmth, xlab = "Warmth + Competence", ylab = "Callback")
fit_warmth <- isoreg(df_wc$callback, df_wc$warm)
plot(fit_warmth, xlab = "Warmth", ylab = "Callback")
fit_competence <- isoreg(df_wc$callback, df_wc$competence)
plot(fit_competence, xlab = "Competence", ylab = "Callback")
library(stats)
# fit isotonic regression model for warmth
fit_warmth <- isoreg(df_wc$callback, df_wc$warm)
plot(fit_warmth, xlab = "Warmth", ylab = "Callback")
fit_competence <- isoreg(df_wc$callback, df_wc$competence)
plot(fit_competence, xlab = "Competence", ylab = "Callback")
pca_result <- prcomp(df_wc[,c('warm', 'competence')], center = TRUE, scale. = TRUE)
df$combined <- pca_result$x[,1] # the first principal component
pca_result <- prcomp(df_wc[,c('warm', 'competence')], center = TRUE, scale. = TRUE)
df_wc$combined <- pca_result$x[,1] # the first principal component
df_wc$PC <- pca_result$x[,1] # the first principal component
fit_PC <- isoreg(df_wc$callback, df_wc$PC)
plot(fit_PC, xlab = "PC1", ylab = "Callback")
library(stats)
par(mfrow = c(3, 1))
pca_result <- prcomp(df_wc[,c('warm', 'competence')], center = TRUE, scale. = TRUE)
df_wc$PC <- pca_result$x[,1] # the first principal component
fit_PC <- isoreg(df_wc$callback, df_wc$PC)
plot(fit_PC, xlab = "PC1", ylab = "Callback")
# fit isotonic regression model for warmth
fit_warmth <- isoreg(df_wc$callback, df_wc$warm)
plot(fit_warmth, xlab = "Warmth", ylab = "Callback")
fit_competence <- isoreg(df_wc$callback, df_wc$competence)
plot(fit_competence, xlab = "Competence", ylab = "Callback")
View(df_wc)
rm(list=ls())
library(tidyverse)
library(ggpubr)
library(ggExtra)
library(gt)
library(car)
library(haven)
library(meta)
library(metafor)
library(dmetar)
library(ragg)
wc<-read_csv("../0_data/ratings/names/df_all.csv",show_col_types = FALSE)
read_csv("../0_data/published_data/df_all.csv",show_col_types = FALSE) %>%
mutate(study=tolower(study)) %>%
mutate(callback_n=as.integer(callback_n))->cb
wc %>%
left_join(cb, by=c("study","name"), multiple="all") %>%
filter(!is.na(callback)) %>%
filter(!is.na(warm)) %>%
filter(!is.na(competent)) -> df
cb %>%
left_join(wc %>%
group_by(study, name) %>%
summarise(warm=mean(warm), competent=mean(competent)),
by=c("study","name")) %>%
filter(!is.na(competent)) %>%
filter(!is.na(warm)) %>%
filter(!is.na(callback)) %>%
mutate(race=tolower(race)) %>%
mutate(gender=tolower(gender)) -> df_avg
View(df)
# canonical correlation analysis
predictors <- df[,c("race", "gender")] # add other predictors as necessary
response <- df[,c("warm", "competent")]
cca_result <- cancor(predictors, response)
predictors
# canonical correlation analysis
df$race <- ifelse(df$race == "White", 1, 0)
df$gender <- ifelse(df$gender == "Male", 1, 0)
df$race
df$gender
predictors <- df[,c("race", "gender")] # add other predictors as necessary
response <- df[,c("warm", "competent")]
cca_result <- cancor(predictors, response)
df$gender
df[,c("warm", "competent")]
cca_result <- cancor(predictors, response)
for(i in seq_len(ncol(df))) {
df[!is.finite(df[,i]), i] <- median(df[,i], na.rm = TRUE)
}
df %>%
select(callback, race, gender, warm, competent)
df %>%
select(callback, race, gender, warm, competent)->df
for(i in seq_len(ncol(df))) {
df[!is.finite(df[,i]), i] <- median(df[,i], na.rm = TRUE)
}
rm(list=ls())
library(tidyverse)
library(ggpubr)
library(ggExtra)
library(gt)
library(car)
library(haven)
library(meta)
library(metafor)
library(dmetar)
library(ragg)
wc<-read_csv("../0_data/ratings/names/df_all.csv",show_col_types = FALSE)
read_csv("../0_data/published_data/df_all.csv",show_col_types = FALSE) %>%
mutate(study=tolower(study)) %>%
mutate(callback_n=as.integer(callback_n))->cb
wc %>%
left_join(cb, by=c("study","name"), multiple="all") %>%
filter(!is.na(callback)) %>%
filter(!is.na(warm)) %>%
filter(!is.na(competent)) -> df
cb %>%
left_join(wc %>%
group_by(study, name) %>%
summarise(warm=mean(warm), competent=mean(competent)),
by=c("study","name")) %>%
filter(!is.na(competent)) %>%
filter(!is.na(warm)) %>%
filter(!is.na(callback)) %>%
mutate(race=tolower(race)) %>%
mutate(gender=tolower(gender)) -> df_avg
# canonical correlation analysis
df %>%
mutate(race = ifelse(race == "White", 1, 0),
gender = ifelse(gender == "Male", 1, 0)) %>%
select(callback, race, gender, warm, competent)->df
View(df)
for(i in seq_len(ncol(df))) {
df[!is.finite(df[,i]), i] <- median(df[,i], na.rm = TRUE)
}
# canonical correlation analysis
df %>%
mutate(race = ifelse(race == "White", 1, 0),
gender = ifelse(gender == "Male", 1, 0)) %>%
select(callback, race, gender, warm, competent) %>%
mutate(across(everything(), as.numeric)) -> df
for(i in seq_len(ncol(df))) {
df[!is.finite(df[,i]), i] <- median(df[,i], na.rm = TRUE)
}
df
# canonical correlation analysis
df %>%
mutate(race = ifelse(race == "White", 1, 0),
gender = ifelse(gender == "Male", 1, 0)) %>%
select(callback, race, gender, warm, competent) %>%
mutate(across(everything(), as.numeric)) %>%
complete.cases()
# canonical correlation analysis
df %>%
mutate(race = ifelse(race == "White", 1, 0),
gender = ifelse(gender == "Male", 1, 0)) %>%
select(callback, race, gender, warm, competent) %>%
mutate(across(everything(), as.numeric)) %>%
complete.cases()->df
wc<-read_csv("../0_data/ratings/names/df_all.csv",show_col_types = FALSE)
read_csv("../0_data/published_data/df_all.csv",show_col_types = FALSE) %>%
mutate(study=tolower(study)) %>%
mutate(callback_n=as.integer(callback_n))->cb
wc %>%
left_join(cb, by=c("study","name"), multiple="all") %>%
filter(!is.na(callback)) %>%
filter(!is.na(warm)) %>%
filter(!is.na(competent)) -> df
cb %>%
left_join(wc %>%
group_by(study, name) %>%
summarise(warm=mean(warm), competent=mean(competent)),
by=c("study","name")) %>%
filter(!is.na(competent)) %>%
filter(!is.na(warm)) %>%
filter(!is.na(callback)) %>%
mutate(race=tolower(race)) %>%
mutate(gender=tolower(gender)) -> df_avg
# canonical correlation analysis
df %>%
mutate(race = ifelse(race == "White", 1, 0),
gender = ifelse(gender == "Male", 1, 0)) %>%
select(callback, race, gender, warm, competent) %>%
mutate(across(everything(), as.numeric)) ->df
df <- df[complete.cases(df), ]
predictors <- df[,c("race", "gender")] # add other predictors as necessary
response <- df[,c("warm", "competent")]
cca_result <- cancor(predictors, response)
df$combined <- cca_result$xcoef %*% as.matrix(predictors)
cca_result$xcoef
as.matrix(predictors)
df$combined <- cca_result$xcoef %*% as.matrix(predictors)
cca_result
print(dim(cca_result$xcoef))
print(dim(as.matrix(predictors)))
as.matrix(predictors)
response
predictors
cca_result <- cancor(predictors, response)
print(dim(cca_result$xcoef))
print(dim(as.matrix(predictors)))
df$combined <- cca_result$x[,1]
combined
cca_result$x[,1]
predictors <- df[,c("race", "gender")] # add other predictors as necessary
response <- df[,c("warm", "competent")]
cca_result <- cancor(predictors, response)
cca_result$x[,1]
pca_result <- prcomp(df_wc[,c('warm', 'competence')], center = TRUE, scale. = TRUE)
par(mfrow = c(3, 1))
pca_result <- prcomp(df[,c('warm', 'competence')], center = TRUE, scale. = TRUE)
fit_competence <- isoreg(df$callback, df$competent)
par(mfrow = c(3, 1))
pca_result <- prcomp(df[,c('warm', 'competent')], center = TRUE, scale. = TRUE)
df_wc$PC <- pca_result$x[,1] # the first principal component
library(stats)
par(mfrow = c(3, 1))
pca_result <- prcomp(df[,c('warm', 'competent')], center = TRUE, scale. = TRUE)
df$PC <- pca_result$x[,1] # the first principal component
fit_PC <- isoreg(df$callback, df$PC)
plot(fit_PC, xlab = "PC1", ylab = "Callback")
# fit isotonic regression model for warmth
fit_warmth <- isoreg(df$callback, df$warm)
plot(fit_warmth, xlab = "Warmth", ylab = "Callback")
fit_competence <- isoreg(df$callback, df$competent)
plot(fit_competence, xlab = "Competence", ylab = "Callback")
?isoreg
df_bertrand <- read_dta("bertrand2004.dta")
View(df_bertrand)
library(stats)
par(mfrow = c(3, 1))
pca_result <- prcomp(df[,c('warm', 'competent')], center = TRUE, scale. = TRUE)
df$PC <- pca_result$x[,1] # the first principal component
fit_PC <- isoreg(df$callback, df$PC)
plot(fit_PC, xlab = "PC1", ylab = "Callback")
# fit isotonic regression model for warmth
fit_warmth <- isoreg(df$callback, df$warm)
plot(fit_warmth, xlab = "Warmth", ylab = "Callback")
fit_competence <- isoreg(df$callback, df$competent)
plot(fit_competence, xlab = "Competence", ylab = "Callback")
rm(list=ls())
library(tidyverse)
library(ggpubr)
library(ggExtra)
library(gt)
library(car)
library(haven)
library(meta)
library(metafor)
library(dmetar)
library(ragg)
wc<-read_csv("../0_data/ratings/names/df_all.csv",show_col_types = FALSE)
read_csv("../0_data/published_data/df_all.csv",show_col_types = FALSE) %>%
mutate(study=tolower(study)) %>%
mutate(callback_n=as.integer(callback_n))->cb
wc %>%
left_join(cb, by=c("study","name"), multiple="all") %>%
filter(!is.na(callback)) %>%
filter(!is.na(warm)) %>%
filter(!is.na(competent)) -> df
cb %>%
left_join(wc %>%
group_by(study, name) %>%
summarise(warm=mean(warm), competent=mean(competent)),
by=c("study","name")) %>%
filter(!is.na(competent)) %>%
filter(!is.na(warm)) %>%
filter(!is.na(callback)) %>%
mutate(race=tolower(race)) %>%
mutate(gender=tolower(gender)) -> df_avg
View(df_avg)
df %>%
group_by(study) %>%
filter(gender=="Male")
df %>%
group_by(study) %>%
filter(gender=="Male") %>%
pull(study)
df %>%
group_by(study) %>%
filter(gender=="Male") %>%
pull(study)->d
unique(d)
df %>%
group_by(study) %>%
filter(gender=="Female") %>%
pull(study)->d
unique(d)
